---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: etcd
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:etcd
rules:
- apiGroups:
  - "certificates.k8s.io"
  resources:
  - "certificatesigningrequests"
  - "certificatesigningrequests/approval"
  - "certificatesigningrequests/status"
  verbs:
  - update
  - create
  - get
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: system:etcd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:etcd
subjects:
- kind: ServiceAccount
  name: etcd
  namespace: default
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
spec:
  selector:
    matchLabels:
      app: etcd
  serviceName: etcd
  replicas: 1
  template:
    metadata:
      labels:
        app: etcd
    spec:
      serviceAccount: etcd
      terminationGracePeriodSeconds: 10
      initContainers:
      - name: kube-csr
        image: quay.io/julienbalestra/kube-csr:latest
        command:
        - /usr/local/bin/kube-csr
        - etcd
        - --generate
        - --submit
        - --approve
        - --fetch
        - --subject-alternative-names
        - $(MY_POD_IP),$(MY_POD_NAME).etcd.svc.cluster.local,etcd.$(MY_POD_NAMESPACE).svc.cluster.local
        - --override
        - --private-key-file=/etc/certs/etcd.private_key
        - --csr-file=/etc/certs/etcd.csr
        - --certificate-file=/etc/certs/etcd.certificate
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: certs
          mountPath: /etc/certs

      containers:
      - name: etcd
        image: quay.io/coreos/etcd:latest
        command:
        - /usr/local/bin/etcd
        - --cert-file=/etc/certs/etcd.certificate
        - --key-file=/etc/certs/etcd.private_key
        - --trusted-ca-file=/run/secrets/kubernetes.io/serviceaccount/ca.crt
        - --advertise-client-urls=https://$(MY_POD_IP):2379
        - --listen-client-urls=https://0.0.0.0:2379
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 2379
          name: etcd
        volumeMounts:
        - name: certs
          mountPath: /etc/certs
      volumes:
      - emptyDir:
        name: certs
---
apiVersion: batch/v1
kind: Job
metadata:
  name: etcdctl
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 60
  template:
    spec:
      containers:
      - name: etcdctl
        image: quay.io/coreos/etcd:latest
        command:
        - /bin/sh
        - -c
        - "until etcdctl --ca-file=/run/secrets/kubernetes.io/serviceaccount/ca.crt
        --endpoints=https://etcd.default.svc.cluster.local:2379 cluster-health;
        do echo '---'; sleep 2; done"
      restartPolicy: Never
---
apiVersion: v1
kind: Service
metadata:
  name: etcd
  namespace: default
  annotations:
  labels:
    app: etcd
spec:
  selector:
    app: etcd
  ports:
  - name: etcd
    port: 2379
    protocol: TCP

